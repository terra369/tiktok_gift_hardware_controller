[TikTok]
# 監視対象のTikTokユーザー名 (@なしの形式を推奨)
USERNAME = nakamura.a.k.a.hippy
# 検知対象のギフト名 (正確な名称。TikTokLiveライブラリでの取得名に合わせる)
TARGET_GIFT_NAME = Swan

[Serial]
# Arduinoが接続されているポート
# Windows: COM3, COM4 など
# macOS: /dev/cu.usbmodem* や /dev/cu.usbserial* など
# 利用可能なポートはログに表示されます
# NONEを設定するとシリアル接続なしで動作します
# 具体的な完全なポート名を入力してください (例: /dev/cu.usbmodem14201)
PORT = COM3
# PORTがNONEの場合はハードウェア接続なしで動作します
# デバイスコネクトモード (WAIT_FOR_DEVICE = デバイスが接続されるまで待機, IGNORE_HARDWARE = デバイス接続なしで動作)
DEVICE_MODE = WAIT_FOR_DEVICE
# ボーレート (Arduinoのスケッチと合わせる)
BAUD_RATE = 9600
# Arduinoからの "Ready" 信号 (末尾の改行は含めない想定で、Python側でstrip()する)
READY_SIGNAL = ready
# Arduinoへ送信するギフト処理コマンド (末尾の改行はPython側で付与する)
GIFT_COMMAND = gift

[Application]
# 1つのギフトを処理した後、次のギフトを処理するまでの最小クールダウン時間（秒）
# Arduino側の処理時間(例:21秒)を考慮し、それ以上の値を推奨
GIFT_PROCESS_COOLDOWN = 22
# TikTok接続試行時のリトライ間隔（秒）
TIKTOK_RECONNECT_DELAY = 60
# ギフトキューの最大サイズ (0は無限)
MAX_GIFT_QUEUE_SIZE = 0
# ログレベル (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL = INFO
# ログファイルパス (空の場合はコンソール出力のみ)
LOG_FILE_PATH = ./logs/app.log